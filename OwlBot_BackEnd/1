"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from pathlib import Path
from dotenv import load_dotenv  # type: ignore

# import pymysql # type: ignore
# pymysql.install_as_MySQLdb()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(BASE_DIR / ".env")

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
WEAVIATE_URL = os.getenv("WEAVIATE_URL")
WEAVIATE_API_KEY = os.getenv("WEAVIATE_API_KEY")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-3nf7wg*5m%t%1@=r=!b19=pq*71g&al5xkj$_gh0u*#3xt6fh8"

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True

#ALLOWED_HOSTS = []

# DEBUG = False
ALLOWED_HOSTS = ["18.226.4.178", "main.dc3573mzvqc1c.amplifyapp.com","owlbot.chat"]  # Replace with actual values


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "corsheaders",
    "rest_framework_simplejwt",
    "chatbot.apps.ChatbotConfig",
    'django_apscheduler',
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",  # Place at the top for proper CORS handling
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",  # Must come before CommonMiddleware
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


CORS_ALLOWED_ORIGINS = [
    "https://main.dc3573mzvqc1c.amplifyapp.com",
    "https://owlbot.chat",  # Add your frontend URL here
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.mysql",  # MySQL backend
#         "NAME": "owlbot_backend",             # Database name
#         "USER": "your_mysql_user",            # Replace with your MySQL username
#         "PASSWORD": "your_mysql_password",    # Replace with your MySQL password
#         "HOST": "127.0.0.1",                  # Use 'localhost' or '127.0.0.1' for local database
#         "PORT": "3306",                       # MySQL port (default: 3306)
#         "OPTIONS": {
#             "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
#         },
#     }
# }



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# STATIC_URL = "static/"
# STATICFILES_DIRS = [BASE_DIR / "static"]
# MEDIA_URL = "/media/"
# MEDIA_ROOT = BASE_DIR / "media"

STATICFILES_DIRS = []  # Remove or leave it empty
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"  # Where `collectstatic` will gather files

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"  # Where uploaded files will be stored
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# config/settings.py

LOGIN_URL = "login"
LOGIN_REDIRECT_URL = "chatbot:index"
LOGOUT_REDIRECT_URL = "login"

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
}

#this when deployed
SESSION_ENGINE = "django.contrib.sessions.backends.db"  # Store sessions in the database

SESSION_COOKIE_AGE = 3600  # 2 weeks in seconds
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Persist session even after browser is closed
CORS_ALLOW_CREDENTIALS = True
SESSION_COOKIE_SAMESITE = "None"  # Required for cross-origin cookies
SESSION_COOKIE_SECURE = True  # Use True if using HTTPS
SESSION_SAVE_EVERY_REQUEST = True

#dont use this
# SESSION_ENGINE = "django.contrib.sessions.backends.db"  # Store session data in the database
# SESSION_COOKIE_AGE = 3600  # 1 hour in seconds
# SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Session ends when the browser is closed
# SESSION_SAVE_EVERY_REQUEST = True  # Save session on every request

#this is for local setup
# SESSION_ENGINE = "django.contrib.sessions.backends.db"  # Store sessions in the database
# SESSION_COOKIE_AGE = 3600  # 1 hour in seconds
# SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Expire session when the browser is closed
# SESSION_SAVE_EVERY_REQUEST = True
# SESSION_COOKIE_SAMESITE = "Lax"  # Use "Lax" for local testing
# SESSION_COOKIE_SECURE = False  # Set to False for local development (True for production with HTTPS)
# CORS_ALLOW_CREDENTIALS = True
